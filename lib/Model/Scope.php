<?php
/**
 * Scope
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  Ez128\Airtable
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Airtable API
 *
 * The Airtable REST API. Please see https://airtable.com/developers/ for more details.
 *
 * The version of the OpenAPI document: 0
 * Contact: help@airtable.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Ez128\Airtable\Model;
use \Ez128\Airtable\ObjectSerializer;

/**
 * Scope Class Doc Comment
 *
 * @category Class
 * @package  Ez128\Airtable
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class Scope
{
    /**
     * Possible values of this enum
     */
    public const DATA_RECORDS_READ = 'data.records:read';

    public const DATA_RECORDS_WRITE = 'data.records:write';

    public const DATA_RECORDS_MANAGE = 'data.records:manage';

    public const DATA_RECORD_COMMENTS_READ = 'data.recordComments:read';

    public const DATA_RECORD_COMMENTS_WRITE = 'data.recordComments:write';

    public const ENTERPRISE_USERS_AND_GROUPS_MANAGE = 'enterprise.usersAndGroups:manage';

    public const ENTERPRISE_SCIM_USERS_AND_GROUPS_MANAGE = 'enterprise.scim.usersAndGroups:manage';

    public const SCHEMA_BASES_READ = 'schema.bases:read';

    public const SCHEMA_BASES_WRITE = 'schema.bases:write';

    public const ENTERPRISE_AUDIT_LOGS_READ = 'enterprise.auditLogs:read';

    public const ENTERPRISE_CHANGE_EVENTS_READ = 'enterprise.changeEvents:read';

    public const ENTERPRISE_EXPORTS_MANAGE = 'enterprise.exports:manage';

    public const ENTERPRISE_ACCOUNT_READ = 'enterprise.account:read';

    public const ENTERPRISE_ACCOUNT_WRITE = 'enterprise.account:write';

    public const ENTERPRISE_USER_READ = 'enterprise.user:read';

    public const ENTERPRISE_USER_WRITE = 'enterprise.user:write';

    public const ENTERPRISE_GROUPS_READ = 'enterprise.groups:read';

    public const ENTERPRISE_GROUPS_MANAGE = 'enterprise.groups:manage';

    public const HYPER_DB_RECORDS_READ = 'hyperDB.records:read';

    public const HYPER_DB_RECORDS_WRITE = 'hyperDB.records:write';

    public const WORKSPACES_AND_BASES_READ = 'workspacesAndBases:read';

    public const WORKSPACES_AND_BASES_WRITE = 'workspacesAndBases:write';

    public const WORKSPACES_AND_BASES_MANAGE = 'workspacesAndBases:manage';

    public const WORKSPACES_AND_BASES_SHARES_MANAGE = 'workspacesAndBases.shares:manage';

    public const WEBHOOK_MANAGE = 'webhook:manage';

    public const BLOCK_MANAGE = 'block:manage';

    public const USER_EMAIL_READ = 'user.email:read';

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::DATA_RECORDS_READ,
            self::DATA_RECORDS_WRITE,
            self::DATA_RECORDS_MANAGE,
            self::DATA_RECORD_COMMENTS_READ,
            self::DATA_RECORD_COMMENTS_WRITE,
            self::ENTERPRISE_USERS_AND_GROUPS_MANAGE,
            self::ENTERPRISE_SCIM_USERS_AND_GROUPS_MANAGE,
            self::SCHEMA_BASES_READ,
            self::SCHEMA_BASES_WRITE,
            self::ENTERPRISE_AUDIT_LOGS_READ,
            self::ENTERPRISE_CHANGE_EVENTS_READ,
            self::ENTERPRISE_EXPORTS_MANAGE,
            self::ENTERPRISE_ACCOUNT_READ,
            self::ENTERPRISE_ACCOUNT_WRITE,
            self::ENTERPRISE_USER_READ,
            self::ENTERPRISE_USER_WRITE,
            self::ENTERPRISE_GROUPS_READ,
            self::ENTERPRISE_GROUPS_MANAGE,
            self::HYPER_DB_RECORDS_READ,
            self::HYPER_DB_RECORDS_WRITE,
            self::WORKSPACES_AND_BASES_READ,
            self::WORKSPACES_AND_BASES_WRITE,
            self::WORKSPACES_AND_BASES_MANAGE,
            self::WORKSPACES_AND_BASES_SHARES_MANAGE,
            self::WEBHOOK_MANAGE,
            self::BLOCK_MANAGE,
            self::USER_EMAIL_READ
        ];
    }
}


