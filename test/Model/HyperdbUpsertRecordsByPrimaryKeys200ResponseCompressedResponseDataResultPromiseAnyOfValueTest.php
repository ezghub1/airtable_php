<?php
/**
 * HyperdbUpsertRecordsByPrimaryKeys200ResponseCompressedResponseDataResultPromiseAnyOfValueTest
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  Ez128\Airtable
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Airtable API
 *
 * The Airtable REST API. Please see https://airtable.com/developers/ for more details.
 *
 * The version of the OpenAPI document: 0
 * Contact: help@airtable.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Ez128\Airtable\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * HyperdbUpsertRecordsByPrimaryKeys200ResponseCompressedResponseDataResultPromiseAnyOfValueTest Class Doc Comment
 *
 * @category    Class
 * @description HyperdbUpsertRecordsByPrimaryKeys200ResponseCompressedResponseDataResultPromiseAnyOfValue
 * @package     Ez128\Airtable
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class HyperdbUpsertRecordsByPrimaryKeys200ResponseCompressedResponseDataResultPromiseAnyOfValueTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "HyperdbUpsertRecordsByPrimaryKeys200ResponseCompressedResponseDataResultPromiseAnyOfValue"
     */
    public function testHyperdbUpsertRecordsByPrimaryKeys200ResponseCompressedResponseDataResultPromiseAnyOfValue()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "compressed_response"
     */
    public function testPropertyCompressedResponse()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "compression_duration_ms"
     */
    public function testPropertyCompressionDurationMs()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "content_type"
     */
    public function testPropertyContentType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "serialization_duration_ms"
     */
    public function testPropertySerializationDurationMs()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "uncompressed_buffer_length_bytes"
     */
    public function testPropertyUncompressedBufferLengthBytes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "uncompressed_string_length"
     */
    public function testPropertyUncompressedStringLength()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
