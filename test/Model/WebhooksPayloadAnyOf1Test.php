<?php
/**
 * WebhooksPayloadAnyOf1Test
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  Ez128\Airtable
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Airtable API
 *
 * The Airtable REST API. Please see https://airtable.com/developers/ for more details.
 *
 * The version of the OpenAPI document: 0
 * Contact: help@airtable.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Ez128\Airtable\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * WebhooksPayloadAnyOf1Test Class Doc Comment
 *
 * @category    Class
 * @description **Error response**  If a specification becomes invalid due to a change in the base (e.g. deletion of a table or view specified in &#x60;recordChangeScope&#x60;, deletion of a field explicitly listed in &#x60;watchDataInFieldIds&#x60; or &#x60;watchSchemasOfFieldIds&#x60;), the specification generates an error payload and goes into an error state. The error payload may contain the change that invalidated the specification. It will not reactivate automatically if the specified field/view/table is reintroduced. The caller must re-create a new webhook. If any of the fields in &#x60;includeCellValuesInFieldIds&#x60; are deleted, the webhook behaves as if they were not specified (no error is generated and the webhook continues to generate data).  &#x60;&#x60;&#x60; {  \&quot;payloads\&quot;: [    {      \&quot;timestamp\&quot;: \&quot;2022-02-01T21:25:05.663Z\&quot;,      \&quot;baseTransactionNumber\&quot;: 4,      \&quot;actionMetadata\&quot;: {        \&quot;source\&quot;: \&quot;client\&quot;,        \&quot;sourceMetadata\&quot;: {          \&quot;user\&quot;: {            \&quot;id\&quot;: \&quot;usr00000000000000\&quot;,            \&quot;email\&quot;: \&quot;foo@bar.com\&quot;,            \&quot;permissionLevel\&quot;: \&quot;create\&quot;          }        }      },      \&quot;destroyedTableIds\&quot;: [        \&quot;tbl20000000000000\&quot;,        \&quot;tbl20000000000001\&quot;      ],      \&quot;error\&quot;: true,      \&quot;code\&quot;: \&quot;INVALID_HOOK\&quot;,      \&quot;payloadFormat\&quot;: \&quot;v0\&quot;    }  ],  \&quot;cursor\&quot;: 5,  \&quot;mightHaveMore\&quot;: false } &#x60;&#x60;&#x60; Note that for error responses &#x60;error&#x60; and &#x60;code&#x60; are the only fields that are typed differently from the success response.
 * @package     Ez128\Airtable
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class WebhooksPayloadAnyOf1Test extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "WebhooksPayloadAnyOf1"
     */
    public function testWebhooksPayloadAnyOf1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "action_metadata"
     */
    public function testPropertyActionMetadata()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "base_transaction_number"
     */
    public function testPropertyBaseTransactionNumber()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "changed_tables_by_id"
     */
    public function testPropertyChangedTablesById()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "code"
     */
    public function testPropertyCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "created_tables_by_id"
     */
    public function testPropertyCreatedTablesById()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "destroyed_table_ids"
     */
    public function testPropertyDestroyedTableIds()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "error"
     */
    public function testPropertyError()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payload_format"
     */
    public function testPropertyPayloadFormat()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "timestamp"
     */
    public function testPropertyTimestamp()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
