<?php
/**
 * ScimApiTest
 * PHP version 8.1
 *
 * @category Class
 * @package  Ez128\Airtable
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Airtable API
 *
 * The Airtable REST API. Please see https://airtable.com/developers/ for more details.
 *
 * The version of the OpenAPI document: 0
 * Contact: help@airtable.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Ez128\Airtable\Test\Api;

use \Ez128\Airtable\Configuration;
use \Ez128\Airtable\ApiException;
use \Ez128\Airtable\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ScimApiTest Class Doc Comment
 *
 * @category Class
 * @package  Ez128\Airtable
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ScimApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createScimGroup
     *
     * Create group.
     *
     */
    public function testCreateScimGroup()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createScimUser
     *
     * Create user.
     *
     */
    public function testCreateScimUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteScimGroup
     *
     * Delete group.
     *
     */
    public function testDeleteScimGroup()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteScimUser
     *
     * Delete user.
     *
     */
    public function testDeleteScimUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getScimGroup
     *
     * Get group.
     *
     */
    public function testGetScimGroup()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getScimUser
     *
     * Get user.
     *
     */
    public function testGetScimUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listScimGroups
     *
     * List groups.
     *
     */
    public function testListScimGroups()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listScimUsers
     *
     * List users.
     *
     */
    public function testListScimUsers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patchScimGroup
     *
     * Patch group.
     *
     */
    public function testPatchScimGroup()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patchScimUser
     *
     * Patch user.
     *
     */
    public function testPatchScimUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for putScimGroup
     *
     * Put group.
     *
     */
    public function testPutScimGroup()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for putScimUser
     *
     * Put user.
     *
     */
    public function testPutScimUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
